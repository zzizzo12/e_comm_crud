[{"/home/krezt/Desktop/react_app/e_commerce/src/index.js":"1","/home/krezt/Desktop/react_app/e_commerce/src/App.js":"2","/home/krezt/Desktop/react_app/e_commerce/src/components/index.js":"3","/home/krezt/Desktop/react_app/e_commerce/src/components/Navbar/Navbar.jsx":"4","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Products.jsx":"5","/home/krezt/Desktop/react_app/e_commerce/src/components/Navbar/styles.js":"6","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/styles.js":"7","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Product/Product.jsx":"8","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Product/styles.js":"9","/home/krezt/Desktop/react_app/e_commerce/src/lib/commerce.js":"10","/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/Cart.jsx":"11","/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/styles.js":"12","/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/CartItem/CartItem.jsx":"13","/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/CartItem/styles.js":"14","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Checkout/Checkout.jsx":"15","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Checkout/styles.js":"16","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/AddressForm.jsx":"17","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/PaymentForm.jsx":"18","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/CustomTextField.jsx":"19","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Review.jsx":"20"},{"size":146,"mtime":1609966138033,"results":"21","hashOfConfig":"22"},{"size":2876,"mtime":1610306107652,"results":"23","hashOfConfig":"22"},{"size":231,"mtime":1610231381809,"results":"24","hashOfConfig":"22"},{"size":1390,"mtime":1610124107452,"results":"25","hashOfConfig":"22"},{"size":674,"mtime":1610111894220,"results":"26","hashOfConfig":"22"},{"size":1786,"mtime":1609973083638,"results":"27","hashOfConfig":"22"},{"size":309,"mtime":1609974118494,"results":"28","hashOfConfig":"22"},{"size":1328,"mtime":1610111825144,"results":"29","hashOfConfig":"22"},{"size":388,"mtime":1609968524289,"results":"30","hashOfConfig":"22"},{"size":125,"mtime":1610052939895,"results":"31","hashOfConfig":"22"},{"size":1895,"mtime":1610229978185,"results":"32","hashOfConfig":"22"},{"size":568,"mtime":1610121177596,"results":"33","hashOfConfig":"22"},{"size":1286,"mtime":1610229603549,"results":"34","hashOfConfig":"22"},{"size":330,"mtime":1610121122480,"results":"35","hashOfConfig":"22"},{"size":3952,"mtime":1610315916013,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1610231177789,"results":"37","hashOfConfig":"22"},{"size":5205,"mtime":1610249798098,"results":"38","hashOfConfig":"22"},{"size":2784,"mtime":1610315686829,"results":"39","hashOfConfig":"22"},{"size":469,"mtime":1610722283707,"results":"40","hashOfConfig":"22"},{"size":1068,"mtime":1610251459010,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"323rpd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/krezt/Desktop/react_app/e_commerce/src/index.js",[],["88","89"],"/home/krezt/Desktop/react_app/e_commerce/src/App.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/index.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Navbar/Navbar.jsx",["90","91","92"],"import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../../assests/logo_e_commerce.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n    \n    const classes = useStyles();\n    const location = useLocation();\n\n\n    return (\n       <>\n         <AppBar position=\"fixed\" className={classes.AppBar} color=\"inherit\">\n             <Toolbar>\n                 <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                     <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\n                     Commerce.js\n                 </Typography>\n                 <div className={classes.grow} />\n                 {location.pathname == '/' && (\n                 <div className={classes.button}>\n                     <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n                         <Badge badgeContent={totalItems} color=\"secondary\" >\n                             <ShoppingCart />\n                         </Badge>\n                     </IconButton>\n                 </div>) }\n             </Toolbar>\n         </AppBar>\n       </> \n    )\n}\n\nexport default Navbar\n","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Products.jsx",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Navbar/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Products/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Product/Product.jsx",["93"],"import React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton, Icon} from '@material-ui/core';\nimport { AddShoppingCart } from '@material-ui/icons';\n\n\nimport useStyles from './styles';\n\nconst Product = ({ product , onAddToCart }) => {\n    \n    const classes = useStyles();\n\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia className={classes.media} image={product.media.source} title={product.name}/>\n            <CardContent>\n                <div className={classes.cardContent}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        {product.name}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom>\n                        {product.price.formatted_with_symbol}\n                    </Typography>\n                </div>\n                <Typography dangerouslySetInnerHTML={{ __html: product.description}} variant=\"body2\" color=\"textSecondary\" />\n            </CardContent>\n            <CardActions disableSpacing className={classes.cardActions}>\n                <IconButton aria-label=\"Add to Cart\" onClick={() => onAddToCart(product.id, 1)}>\n                    <AddShoppingCart />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Product;\n","/home/krezt/Desktop/react_app/e_commerce/src/components/Products/Product/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/lib/commerce.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/Cart.jsx",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/Cart/CartItem/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Checkout/Checkout.jsx",["94","95","96"],"import React, { useState ,useEffect } from 'react';\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { commerce } from '../../../lib/commerce';\nimport useStyles from './styles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\n\nconst steps = ['Shipping adress', 'Payment details'];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error}) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken]  = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const [isFinished, setIsFinished] = useState(false); // this also for no_stripe_card\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n        const generateToken = async () => {\n            try {\n\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart'});\n                setCheckoutToken(token);\n\n            } catch (error) {\n                history.pushState('/');\n            }\n        }\n\n        generateToken();\n    }, [cart]);\n\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n    const next = (data) => {\n        setShippingData(data);\n\n        nextStep();\n    }\n\n    // case_no_stripe_account and the timeout in the <Paymentform > props, down bellow and also from line 60-70\n    const timeout = () => {\n        setTimeout(() => {\n            setIsFinished(true)\n        }, 3000);\n    }  \n\n    let Confirmation = () => order.customer ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back To Home</Button>\n        </>\n    ) : isFinished ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase! </Typography>\n                <Divider className={classes.divider} />\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back To Home</Button>\n        </>\n    ) : (\n        <div className={classes.spinner}>\n            <CircularProgress />\n        </div>\n    );\n\n    if(error) {\n        <>\n           <Typography variant=\"h5\">Error: {error}</Typography>\n           <br />\n           <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back To Home</Button>\n        </>\n    }\n\n    const Form = () => activeStep == 0 \n        ? <AddressForm checkoutToken={checkoutToken} next={next}/> \n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\n\n    return (\n        <>\n        <CssBaseline />\n           <div className={classes.toolbar} />\n           <main className={classes.layout}>\n               <Paper className={classes.paper}>\n                   <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n                   <Stepper activeStep={activeStep} className={classes.stepper}>\n                       {steps.map((step) =>(\n                           <Step key={step}>\n                               <StepLabel>{step}</StepLabel>\n                           </Step>\n                       ))}\n                   </Stepper>\n                   {activeStep == steps.length ? <Confirmation /> : checkoutToken && <Form />}\n               </Paper>\n           </main>  \n        </>\n    )\n}\n\nexport default Checkout\n","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Checkout/styles.js",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/AddressForm.jsx",["97","98"],"import React, { useState , useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography} from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport FormInput from './CustomTextField';\n\nimport { commerce } from '../../lib/commerce';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\n    \n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, []);\n\n    useEffect(() => {\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision)\n    }, [shippingSubdivision])\n\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption}))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First name'/>\n                        <FormInput required name='lastName' label='Last name'/>\n                        <FormInput required name='address1' label='Address'/>\n                        <FormInput required name='email' label='E-mail'/>\n                        <FormInput required name='city' label='City'/>\n                        <FormInput required name='zip' label='ZIP / Postal code'/>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/PaymentForm.jsx",[],"/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/CustomTextField.jsx",[],["99","100"],"/home/krezt/Desktop/react_app/e_commerce/src/components/CheckoutFrom/Review.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":46,"nodeType":"107","messageId":"108","endLine":2,"endColumn":54},{"ruleId":"105","severity":1,"message":"109","line":2,"column":56,"nodeType":"107","messageId":"108","endLine":2,"endColumn":60},{"ruleId":"110","severity":1,"message":"111","line":24,"column":37,"nodeType":"112","messageId":"113","endLine":24,"endColumn":39},{"ruleId":"105","severity":1,"message":"114","line":2,"column":77,"nodeType":"107","messageId":"108","endLine":2,"endColumn":81},{"ruleId":"115","severity":1,"message":"116","line":32,"column":8,"nodeType":"117","endLine":32,"endColumn":14,"suggestions":"118"},{"ruleId":"110","severity":1,"message":"111","line":83,"column":35,"nodeType":"112","messageId":"113","endLine":83,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":101,"column":32,"nodeType":"112","messageId":"113","endLine":101,"endColumn":34},{"ruleId":"115","severity":1,"message":"119","line":47,"column":8,"nodeType":"117","endLine":47,"endColumn":10,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":55,"column":8,"nodeType":"117","endLine":55,"endColumn":29,"suggestions":"122"},{"ruleId":"101","replacedBy":"123"},{"ruleId":"103","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Icon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["129"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [cart, history]",{"range":"136","text":"137"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"138","text":"139"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"140","text":"141"},[1203,1209],"[cart, history]",[2068,2070],"[checkoutToken.id]",[2326,2347],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]